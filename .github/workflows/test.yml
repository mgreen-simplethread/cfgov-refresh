
name: test

on: pull_request

jobs:

  frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        gulp_cmd:
          - lint
          - test:unit --ci --headless

    steps:
      - uses: actions/checkout@v1

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
            node-version: '10.x'

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          ./frontend.sh development
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Run ${{ matrix.gulp_cmd }}
        run: yarn run gulp ${{ matrix.gulp_cmd }}

      - name: Store test coverage
        if: matrix.gulp_cmd == 'test:unit --ci --headless'
        uses: actions/upload-artifact@v1
        with:
          name: coverage-final.json
          path: ./test/unit_test_coverage/coverage-final.json

  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        toxenv:
          - lint-py36
          - unittest-py36-dj111-wag113-slow
          - unittest-py36-dj111-wag23-slow
        include:
          - toxenv: lint-py36
            python-version: 3.6
          - toxenv: unittest-py36-dj111-wag113-slow
            python-version: 3.6
          - toxenv: unittest-py36-dj111-wag23-slow
            python-version: 3.6

    services:
      postgres:
        # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test runner dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/ci.txt

      - name: Run tox -e ${{ matrix.toxenv }}
        run: |
          tox -e ${{ matrix.toxenv }}
        env: 
          TEST_RUNNER: cfgov.test.StdoutCapturingTestRunner 
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost/postgres
          CI_CHECK_MIGRATIONS: "./manage.py makemigrations --dry-run --check"

      - name: Store test coverage
        # Submit coverage from our prefered tox run only
        if: matrix.toxenv == 'unittest-py36-dj111-wag113-slow'

        uses: actions/upload-artifact@v1
        with:
          name: coverage.xml
          path: ./coverage.xml

  coverage:
    runs-on: ubuntu-latest
    needs: 
      - frontend
      - backend

    steps:
      - uses: actions/checkout@v1

      - name: Retrieve frontend coverage
        uses: actions/download-artifact@v1
        with:
            name: coverage-final.json

      - name: Retrieve backend coverage
        uses: actions/download-artifact@v1
        with:
            name: coverage.xml

      - name: Submit frontend test coverage
        uses: codecov/codecov-action@v1
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            file: ./coverage-final.json
            flags: frontend 
            yml: ./codecov.yml
            fail_ci_if_error: true

      - name: Submit backend test coverage
        uses: codecov/codecov-action@v1
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            file: ./coverage.xml
            flags: backend
            yml: ./codecov.yml
            fail_ci_if_error: true
